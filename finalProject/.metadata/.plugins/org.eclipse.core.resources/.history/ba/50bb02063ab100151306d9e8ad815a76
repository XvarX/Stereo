import java.awt.image.*;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.lang.reflect.Array;
import java.math.*;
import java.util.Vector;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
class LabModel {
	private double L = 0;
	private double a = 0;
	private double b = 0;
	public void setLab(double L_, double a_, double b_) {
		this.L = L_;
		this.a = a_;
		this.b = b_;
	}
}
public class Stero {
	public static void main(String args[]) throws IOException
	{
		JFrame frame = new JFrame();
		label = new JLabel();
		frame.setSize(1400,800);
		frame.add(label);
		saw_image();
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setVisible(true);
	}
	public static void saw_image() throws IOException {
		File file1 = new File("C:\\Users\\Xvar\\Desktop\\ALL-2views\\Aloe\\view1.png");
		BufferedImage bufferedImage1 = ImageIO.read(file1);
		int width = bufferedImage1.getWidth();
		int height = bufferedImage1.getHeight();
		for (int i = 0;i < width;i++) {
			for (int j = 0;j < height;j++) {
				int rgb = bufferedImage1.getRGB(i, j);
				double r  =(rgb & 0xff0000) >> 16;
			    double g = (rgb & 0xff00) >> 8;
	            double b = rgb & 0xff;
	            //rgb to Lab
	            //rgb to XYZ
	            double var_R = gamma(r/255.0);
	            double var_G = gamma(g/255.0);
	            double var_B = gamma(b/255.0);
	            double X = var_R * 0.4124 + var_G * 0.3576 + var_B * 0.1805;
	            double Y = var_R * 0.2126 + var_G * 0.7152 + var_B * 0.0722;
	            double Z = var_R * 0.0193 + var_G * 0.1192 + var_B * 0.9505;
	            double Xn = 95.047;
	            double Yn = 100.0;
	            double Zn = 108.883;
	            double flyY = fly(Y/Yn);
	            double flyX = fly(X/Xn);
	            double flyZ = fly(Z/Zn);
	            //xyz to Lab
	            double L = 116*flyY -16;
	            double a_ = 500*(flyX-flyY);
	            double b_ = 200*(flyY-flyZ);
	            
	            //stero
			}
		}
	}
	public static double fly(double t) {
		double result;
		if (t > Math.pow(6/29,3)) {
			result = Math.pow(t, 1.0/3);
		} else {
			result = (1/3)*(29/6)*(29/6)*t + 4/29;
		}
		return result;
	}
	public static double gamma(double x) {
		if (x > 0.04045) {
			return Math.pow((x+0.055)/1.055, 2.4);
		}else{
			return x/12.92;
		}
	}
	public static void imageshow(BufferedImage img_buff) {
		ImageIcon newicon = new ImageIcon(img_buff);
		label.setIcon(newicon);
	}
	public static int[][]greyValue(BufferedImage img_buff) {
		BufferedImage bufferedImage = img_buff;
		int ImageWidth = img_buff.getWidth();
		int ImageHeight = img_buff.getHeight();
		int greyValue[][] = new int[ImageWidth][ImageHeight];
		int i = 0;
		int j = 0;
		while (i < ImageWidth) {
			j = 0;
			while (j < ImageHeight) {
				int a = bufferedImage.getRGB(i,j);
			    int r  =(a & 0xff0000) >> 16;
		        int g = (a & 0xff00) >> 8;
		        int b = a & 0xff;
			    int grey = (int) (r * 0.3 + g * 0.59 + b * 0.11);
			    greyValue[i][j] = grey;
			    j++;
			}
			i++;
		}
		return greyValue;
	}
	private static JLabel label;
}